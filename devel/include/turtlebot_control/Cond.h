// Generated by gencpp from file turtlebot_control/Cond.msg
// DO NOT EDIT!


#ifndef TURTLEBOT_CONTROL_MESSAGE_COND_H
#define TURTLEBOT_CONTROL_MESSAGE_COND_H

#include <ros/service_traits.h>


#include <turtlebot_control/CondRequest.h>
#include <turtlebot_control/CondResponse.h>


namespace turtlebot_control
{

struct Cond
{

typedef CondRequest Request;
typedef CondResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Cond
} // namespace turtlebot_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtlebot_control::Cond > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::turtlebot_control::Cond&) { return value(); }
};

template<>
struct DataType< ::turtlebot_control::Cond > {
  static const char* value()
  {
    return "turtlebot_control/Cond";
  }

  static const char* value(const ::turtlebot_control::Cond&) { return value(); }
};


// service_traits::MD5Sum< ::turtlebot_control::CondRequest> should match
// service_traits::MD5Sum< ::turtlebot_control::Cond >
template<>
struct MD5Sum< ::turtlebot_control::CondRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot_control::Cond >::value();
  }
  static const char* value(const ::turtlebot_control::CondRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot_control::CondRequest> should match
// service_traits::DataType< ::turtlebot_control::Cond >
template<>
struct DataType< ::turtlebot_control::CondRequest>
{
  static const char* value()
  {
    return DataType< ::turtlebot_control::Cond >::value();
  }
  static const char* value(const ::turtlebot_control::CondRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtlebot_control::CondResponse> should match
// service_traits::MD5Sum< ::turtlebot_control::Cond >
template<>
struct MD5Sum< ::turtlebot_control::CondResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot_control::Cond >::value();
  }
  static const char* value(const ::turtlebot_control::CondResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot_control::CondResponse> should match
// service_traits::DataType< ::turtlebot_control::Cond >
template<>
struct DataType< ::turtlebot_control::CondResponse>
{
  static const char* value()
  {
    return DataType< ::turtlebot_control::Cond >::value();
  }
  static const char* value(const ::turtlebot_control::CondResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLEBOT_CONTROL_MESSAGE_COND_H
